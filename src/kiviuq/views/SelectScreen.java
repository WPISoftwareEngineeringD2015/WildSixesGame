package kiviuq.views;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.FlowLayout;
import java.awt.Font;
import java.awt.GridLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.SwingConstants;
import javax.swing.border.EmptyBorder;

import kiviuq.controllers.CreateLevelController;

public class SelectScreen extends JFrame {
	JPanel puzzle1Panel;
	JPanel puzzle2Panel;
	JPanel puzzle3Panel;
	JPanel puzzle4Panel;
	JPanel puzzle5Panel;
	JPanel lightning1Panel;
	JPanel lightning2Panel;
	JPanel lightning3Panel;
	JPanel lightning4Panel;
	JPanel lightning5Panel;
	JPanel elimination1Panel;
	JPanel elimination2Panel;
	JPanel elimination3Panel;
	JPanel elimination4Panel;
	JPanel elimination5Panel;
	JPanel release1Panel;
	JPanel release2Panel;
	JPanel release3Panel;
	JPanel release4Panel;
	JPanel release5Panel;

	/**
	 * Auto-generated by eclipse to suppress a warning
	 */
	private static final long serialVersionUID = 1L;

	private JPanel contentPane;
	JFrame lastWindow;


	/**
	 * Create the frame.
	 */
	public SelectScreen(JFrame lastWindow) {
		this.lastWindow = lastWindow;

		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 867, 715);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(new BorderLayout(0, 0));
		setLocationRelativeTo(null);

		JLabel title = new JLabel("Levels");
		title.setFont(new Font("Candara", Font.PLAIN, 38));
		title.setHorizontalAlignment(SwingConstants.CENTER);
		contentPane.add(title, BorderLayout.NORTH);

		JPanel panel = new JPanel();
		contentPane.add(panel, BorderLayout.SOUTH);
		panel.setLayout(new BorderLayout(0, 0));

		JButton backBTN = new JButton("Back");
		backBTN.addActionListener(new ActionListener() {
			// Executes code on button press
			public void actionPerformed(ActionEvent e) {
				SelectScreen.this.goToMainScreen();
			}
		});
		panel.add(backBTN, BorderLayout.WEST);

		JPanel panel_1 = new JPanel();
		contentPane.add(panel_1, BorderLayout.CENTER);
		panel_1.setLayout(new GridLayout(0, 5, 5, 5));

		puzzle1Panel = new JPanel();
		FlowLayout fl_puzzle1Panel = (FlowLayout) puzzle1Panel.getLayout();
		fl_puzzle1Panel.setAlignOnBaseline(true);
		puzzle1Panel.setBackground(Color.CYAN);
		puzzle1Panel.setName("puzzle 1");
		puzzle1Panel.addMouseListener(new CreateLevelController(puzzle1Panel.getName(), this));
		panel_1.add(puzzle1Panel);

		puzzle2Panel = new JPanel();
		puzzle2Panel.setBackground(Color.BLUE);
		puzzle2Panel.setName("puzzle 2");
		puzzle2Panel.addMouseListener(new CreateLevelController(puzzle2Panel.getName(), this));
		panel_1.add(puzzle2Panel);

		puzzle3Panel = new JPanel();
		puzzle3Panel.setBackground(Color.BLUE);
		puzzle3Panel.setName("puzzle 3");
		puzzle3Panel.addMouseListener(new CreateLevelController(puzzle3Panel.getName(), this));
		panel_1.add(puzzle3Panel);

		puzzle4Panel = new JPanel();
		puzzle4Panel.setBackground(Color.BLUE);
		puzzle4Panel.setName("puzzle 4");
		puzzle4Panel.addMouseListener(new CreateLevelController(puzzle4Panel.getName(), this));
		panel_1.add(puzzle4Panel);

		puzzle5Panel = new JPanel();
		puzzle5Panel.setBackground(Color.BLUE);
		puzzle5Panel.setName("puzzle 5");
		puzzle5Panel.addMouseListener(new CreateLevelController(puzzle5Panel.getName(), this));
		panel_1.add(puzzle5Panel);

		lightning1Panel = new JPanel();
		lightning1Panel.setBackground(Color.CYAN); 
		lightning1Panel.setName("lightning 1");
		lightning1Panel.addMouseListener(new CreateLevelController(lightning1Panel.getName(), this));
		panel_1.add(lightning1Panel);

		lightning2Panel = new JPanel();
		lightning2Panel.setBackground(Color.BLUE);
		lightning2Panel.setName("lightning 2");
		lightning2Panel.addMouseListener(new CreateLevelController(lightning2Panel.getName(), this));
		panel_1.add(lightning2Panel);

		lightning3Panel = new JPanel();
		lightning3Panel.setBackground(Color.BLUE);
		lightning3Panel.setName("lightning 3");
		lightning3Panel.addMouseListener(new CreateLevelController(lightning3Panel.getName(), this));
		panel_1.add(lightning3Panel);

		lightning4Panel = new JPanel();
		lightning4Panel.setBackground(Color.BLUE);
		lightning4Panel.setName("lightning 4");
		lightning4Panel.addMouseListener(new CreateLevelController(lightning4Panel.getName(), this));
		panel_1.add(lightning4Panel);

		lightning5Panel = new JPanel();
		lightning5Panel.setBackground(Color.BLUE);
		lightning5Panel.setName("lightning 5");
		lightning5Panel.addMouseListener(new CreateLevelController(lightning5Panel.getName(), this));
		panel_1.add(lightning5Panel);

		elimination1Panel = new JPanel();
		elimination1Panel.setBackground(Color.CYAN);
		elimination1Panel.setName("elimination 1");
		elimination1Panel.addMouseListener(new CreateLevelController(elimination1Panel.getName(), this));
		panel_1.add(elimination1Panel);

		elimination2Panel = new JPanel();
		elimination2Panel.setBackground(Color.BLUE);
		elimination2Panel.setName("elimination 2");
		elimination2Panel.addMouseListener(new CreateLevelController(elimination2Panel.getName(), this));
		panel_1.add(elimination2Panel);

		elimination3Panel = new JPanel();
		elimination3Panel.setBackground(Color.BLUE);
		elimination3Panel.setName("elimination 3");
		elimination3Panel.addMouseListener(new CreateLevelController(elimination3Panel.getName(), this));
		panel_1.add(elimination3Panel);

		elimination4Panel = new JPanel();
		elimination4Panel.setBackground(Color.BLUE);
		elimination4Panel.setName("elimination 4");
		elimination4Panel.addMouseListener(new CreateLevelController(elimination4Panel.getName(), this));
		panel_1.add(elimination4Panel);

		elimination5Panel = new JPanel();
		elimination5Panel.setBackground(Color.BLUE);
		elimination5Panel.setName("elimination 5");
		elimination5Panel.addMouseListener(new CreateLevelController(elimination5Panel.getName(), this));
		panel_1.add(elimination5Panel);

		release1Panel = new JPanel();
		release1Panel.setBackground(Color.CYAN);
		release1Panel.setName("release 1");
		release1Panel.addMouseListener(new CreateLevelController(release1Panel.getName(), this));
		panel_1.add(release1Panel);

		release2Panel = new JPanel();
		release2Panel.setBackground(Color.BLUE);
		release2Panel.setName("release 2");
		release2Panel.addMouseListener(new CreateLevelController(release2Panel.getName(), this));
		panel_1.add(release2Panel);
		release2Panel.setLayout(null);

		release3Panel = new JPanel();
		release3Panel.setLayout(null);
		release3Panel.setBackground(Color.BLUE);
		release3Panel.setName("release 3");
		release3Panel.addMouseListener(new CreateLevelController(release3Panel.getName(), this));
		panel_1.add(release3Panel);

		release4Panel = new JPanel();
		release4Panel.setLayout(null);
		release4Panel.setBackground(Color.BLUE);
		release4Panel.setName("release 4");
		release4Panel.addMouseListener(new CreateLevelController(release4Panel.getName(), this));
		panel_1.add(release4Panel);

		release5Panel = new JPanel();
		release5Panel.setLayout(null);
		release5Panel.setBackground(Color.BLUE);
		release5Panel.setName("release 5");
		release5Panel.addMouseListener(new CreateLevelController(release5Panel.getName(), this));
		panel_1.add(release5Panel);

		JPanel panel_2 = new JPanel();
		contentPane.add(panel_2, BorderLayout.WEST);
		panel_2.setLayout(new GridLayout(4, 1, 15, 5));

		JLabel lblNewLabel = new JLabel("Puzzle");
		panel_2.add(lblNewLabel);

		JLabel lblNewLabel_1 = new JLabel("Lightning");
		panel_2.add(lblNewLabel_1);

		JLabel lblNewLabel_2 = new JLabel("Elimination   ");
		panel_2.add(lblNewLabel_2);

		JLabel lblNewLabel_3 = new JLabel("Release");
		panel_2.add(lblNewLabel_3);
	}

	public void goToMainScreen() {
		this.lastWindow.setVisible(true);
		this.setVisible(false);
		this.dispose();
	}

}
